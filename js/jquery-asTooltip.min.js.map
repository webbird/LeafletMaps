{"version":3,"sources":["jquery-asTooltip.es.js"],"names":["global","factory","define","amd","exports","require","mod","jQuery","jqueryAsTooltipEs","this","_jquery","_classCallCheck","instance","Constructor","TypeError","_jquery2","obj","__esModule","default","_interopRequireDefault","_typeof","Symbol","iterator","constructor","prototype","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","DEFAULTS","namespace","skin","closeBtn","position","value","container","auto","adjust","mouse","resize","scroll","show","event","delay","hide","inactive","content","contentAttr","ajax","tpl","onInit","onShow","onHide","onFocus","onBlur","$win","window","instances","computePlacementOffset","element","$tip","isMove","elOffset","elWidth","elHeight","tipWidth","tipHeight","$element","x","y","offset","outerWidth","outerHeight","left","top","Math","round","getViewportCollisions","el","$container","eOffset","cOffset","scrollLeft","tagName","scrollTop","eWidth","eHeight","tWidth","tHeight","cWidth","innerWidth","cHeight","innerHeight","collisions","push","asTooltip","options","body","document","newTarget","opts","targetData","parseTargetData","data","extend","getContent","enabled","isOpen","loadFlag","moveFlag","showTimer","hideTimer","classes","isLoading","active","trigger","init","_this","showTarget","hideTarget","showEvent","hideEvent","replace","$loading","$content","_bind","e","hideMethod","showMethod","setPosition","eventType","_len","arguments","params","Array","_key","concat","NAMESPACE$1","onFunction","word","substring","toUpperCase","apply","targets","events","method","suffix","name","on","proxy","unbind","each","n","v","names","split","len","path","undefined","string","self","_options","currentTarget","getDelegateOptions","clearTimeout","setTimeout","isFirst","move","$target","closest","$el","_unbind","pageX","pageY","t","l","w","h","off","attr","_offset","positionAttr","flag","css","posArr","map","addClass","removeClass","loadToggle","html","appendTo"],"mappings":"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","file":"jquery-asTooltip.min.js","sourcesContent":["/**\n* jQuery asTooltip v0.4.3\n* https://github.com/amazingSurge/jquery-asTooltip\n*\n* Copyright (c) amazingSurge\n* Released under the LGPL-3.0 license\n*/\nimport $ from 'jquery';\n\nvar DEFAULTS = {\n  namespace: 'asTooltip',\n\n  skin: '',\n\n  closeBtn: false,\n\n  position: {\n    value: 'right middle',\n    target: false, //mouse || jqueryObj\n    container: false,\n    auto: false, //if true, judge by positionContainer\n    adjust: {\n      mouse: true, //Work when positionTarget is mouse\n      resize: true,\n      scroll: true\n    }\n  },\n\n  show: {\n    target: false,\n    event: 'mouseenter',\n    delay: 0\n  },\n\n  hide: {\n    target: false,\n    event: 'mouseleave',\n    delay: 0,\n    container: false, // only hideEvent is click, it can be body or obj\n    inactive: false //if true, it is always show when tip hovering\n  },\n\n  content: null,\n  contentAttr: 'title',\n\n  ajax: false,\n  tpl: '<div class=\"{{namespace}}\">' +\n    '<div class=\"{{namespace}}-inner\">' +\n    '<div class=\"{{namespace}}-loading\"></div>' +\n    '<div class=\"{{namespace}}-content\"></div>' +\n    '</div>' +\n    '</div>',\n\n  onInit: null,\n  onShow: null,\n  onHide: null,\n  onFocus: null,\n  onBlur: null\n};\n\nconst NAMESPACE$1 = 'asTooltip';\n\nconst $win = $(window);\nconst instances = [];\n\n// this is the core function to compute the position to show depended on the given placement argument\nconst computePlacementOffset = (element, $tip, position, isMove) => {\n  // grab measurements\n  let elOffset;\n\n  let elWidth;\n  let elHeight;\n  let tipWidth;\n  let tipHeight;\n  const $element = $(element);\n  let x = 0;\n  let y = 0;\n\n  elOffset = isMove ? element : $element.offset();\n  elWidth = isMove ? 0 : $element.outerWidth();\n  elHeight = isMove ? 0 : $element.outerHeight();\n\n  tipWidth = $tip.outerWidth();\n  tipHeight = $tip.outerHeight();\n\n  for (let i = 0; i < position.length; i++) {\n    switch (position[i]) {\n      case 'left':\n        x = i === 0 ? elOffset.left - tipWidth : elOffset.left;\n        break;\n      case 'middle':\n        switch (position[0]) {\n          case 'left':\n          case 'right':\n            y = elOffset.top + (elHeight - tipHeight) / 2;\n            break;\n          case 'top':\n          case 'bottom':\n            x = elOffset.left + (elWidth - tipWidth) / 2;\n            break;\n          default:\n            break;\n        }\n        break;\n      case 'right':\n        x = i === 0 ? elOffset.left + elWidth : elOffset.left + elWidth - tipWidth;\n        break;\n      case 'top':\n        y = i === 0 ? elOffset.top - tipHeight : elOffset.top;\n        break;\n      case 'bottom':\n        y = i === 0 ? elOffset.top + elHeight : elOffset.top + elHeight - tipHeight;\n        break;\n      default:\n        break;\n    }\n  }\n\n  return {\n    left: Math.round(x),\n    top: Math.round(y)\n  };\n};\n\nconst getViewportCollisions = (el, $tip, $container) => {\n  const $element = $(el);\n  const eOffset = $element.offset();\n  const cOffset = $container.offset();\n  const scrollLeft = $container[0].tagName === 'BODY' ? $win.scrollLeft() : $container.scrollLeft();\n  const scrollTop = $container[0].tagName === 'BODY' ? $win.scrollTop() : $container.scrollTop();\n\n  const offset = $container[0].tagName === 'BODY' ? eOffset : {\n    top: eOffset.top - cOffset.top,\n    left: eOffset.left - cOffset.left\n  };\n\n  const eWidth = $element.outerWidth();\n  const eHeight = $element.outerHeight();\n  const tWidth = $tip.outerWidth();\n  const tHeight = $tip.outerHeight();\n  const cWidth = $container[0].tagName === 'BODY' ? $win.innerWidth() : $container.outerWidth();\n  const cHeight = $container[0].tagName === 'BODY' ? $win.innerHeight() : $container.outerHeight();\n  const collisions = [];\n\n  if (tHeight > offset.top - scrollTop) {\n    collisions.push('top');\n  }\n  if (tHeight + eHeight + offset.top > scrollTop + cHeight) {\n    collisions.push('bottom');\n  }\n  if (tWidth > offset.left - scrollLeft) {\n    collisions.push('left');\n  }\n  if (tWidth + eWidth + offset.left > scrollLeft + cWidth) {\n    collisions.push('right');\n  }\n\n  return collisions;\n};\n\n/**\n * Plugin constructor\n **/\nclass asTooltip {\n  constructor(element, options) {\n    const body = $(document.body);\n    const newTarget = element[0] === document ? body : element;\n    let opts;\n    let targetData;\n    targetData = this.parseTargetData($(newTarget).data());\n    opts = this.options = $.extend(true, {}, DEFAULTS, options, targetData);\n\n    opts.position.container = !opts.position.container ? body : $(opts.position.container);\n    if (!opts.position.target) {\n      opts.position.target = newTarget;\n    }\n    if (!opts.show.target) {\n      opts.show.target = newTarget;\n    }\n    if (!opts.hide.target) {\n      opts.hide.target = newTarget;\n    }\n\n    this.$element = $(newTarget);\n\n    this.namespace = this.options.namespace;\n    opts.content = this.getContent();\n\n    this.enabled = true;\n    this.isOpen = false;\n    this.loadFlag = false;\n    this.moveFlag = false;\n    this.showTimer = null;\n    this.hideTimer = null;\n\n    this.classes = {\n      show: `${this.namespace}_isShow`,\n      isLoading: `${this.namespace}_isLoading`,\n      active: `${this.namespace}_active`,\n      enabled: `${this.namespace}_enabled`,\n    };\n\n    this.trigger('init');\n    this.init();\n  }\n\n  init() {\n    const opts = this.options;\n    const showTarget = opts.show.target;\n    const hideTarget = opts.hide.target;\n    const showEvent = opts.show.event;\n    const hideEvent = opts.hide.event;\n\n    // add namepace\n    this.$tip = $(opts.tpl.replace(/{{namespace}}/g, this.namespace));\n\n    this.$loading = $(`.${this.namespace}-loading`, this.$tip);\n    this.$content = $(`.${this.namespace}-content`, this.$tip);\n\n    if (showTarget === hideTarget && showEvent === hideEvent) {\n      this._bind(showTarget, showEvent, (e) => {\n        if(this.isOpen){\n          this.hideMethod(e);\n        } else {\n          this.showMethod(e);\n        }\n      });\n    } else {\n      this._bind(showTarget, showEvent, (e) => {\n        this.showMethod(e);\n      });\n      this._bind(hideTarget, hideEvent, (e) => {\n        this.hideMethod(e);\n      });\n    }\n    if (opts.position.container[0].tagName === 'BODY') {\n      if (opts.position.adjust.resize) {\n        this._bind($win, 'resize', () => {\n          if (this.isOpen) {\n            this.setPosition();\n          }\n        });\n      }\n      if (opts.position.adjust.scroll) {\n        this._bind($win, 'scroll', () => {\n          if (this.isOpen) {\n            this.setPosition();\n          }\n        });\n      }\n    }\n  }\n\n  trigger(eventType, ...params) {\n    let data = [this].concat(params);\n\n    // event\n    this.$element.trigger(`${NAMESPACE$1}::${eventType}`, data);\n\n    // callback\n    eventType = eventType.replace(/\\b\\w+\\b/g, (word) => {\n      return word.substring(0, 1).toUpperCase() + word.substring(1);\n    });\n    let onFunction = `on${eventType}`;\n\n    if (typeof this.options[onFunction] === 'function') {\n      this.options[onFunction].apply(this, params);\n    }\n  }\n\n  _bind(targets, events, method, suffix) {\n    if (!targets || !method || !events.length) {\n      return;\n    }\n    const name = suffix ? events : `${events}.${suffix}`;\n    $(targets).on(name, $.proxy(method, this));\n    return this;\n  }\n\n  _unbind(targets, events, suffix) {\n    if(targets) {\n      $(targets).unbind(suffix ? events : `${events}.${suffix}`);\n    }\n    return this;\n  }\n\n  parseTargetData(data) {\n    const targetData = {};\n    $.each(data, (n, v) => {\n      const names = n.split('_');\n      const len = names.length;\n      let path = targetData;\n      if (len === 1) {\n        targetData[names[0]] = v;\n      } else {\n        for (let i = 0; i < len; i++) {\n          if (i === 0) {\n            if (targetData[names[i]] === undefined) {\n              targetData[names[i]] = {};\n            }\n          } else if (i === len - 1) {\n            path[names[i]] = v;\n          } else {\n            if (path[names[i]] === undefined) {\n              path[names[i]] = {};\n            }\n          }\n          path = targetData[names[i]];\n        }\n      }\n    });\n    return targetData;\n  }\n\n  parseTpl(string) {\n    return string.replace('{{namespace}}', self.namespace);\n  }\n\n  getDelegateOptions() {\n    const options = {};\n\n    if(this._options){\n      $.each(this._options, (key, value) => {\n        if (DEFAULTS[key] !== value) {\n          options[key] = value;\n        }\n      });\n    }\n\n    return options;\n  }\n\n  showMethod(obj) {\n    let self = obj instanceof this.constructor ? obj: $(obj.currentTarget).data(NAMESPACE$1);\n    const opts = this.options;\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions());\n      $(obj.currentTarget).data(NAMESPACE$1, self);\n    }\n\n    if (!opts.ajax && !self.options.content) {\n      return;\n    }\n\n    if (self.isOpen) {\n      clearTimeout(self.hideTimer);\n    } else {\n      clearTimeout(self.showTimer);\n      self.showTimer = setTimeout(() => {\n        $.proxy(self.show, self)();\n      }, opts.show.delay);\n    }\n\n    if (opts.position.target === 'mouse') {\n      if (this.moveFlag) {\n        return;\n      }\n      this.isFirst = true;\n      $(document).on(`mousemove.${NAMESPACE$1}`, $.proxy(this.move, self));\n      this.moveFlag = true;\n    }\n\n    if (opts.hide.event === 'click') {\n      if (opts.hide.container) {\n        this._bind(opts.hide.container, opts.hide.event, e => {\n          const $target = $(e.target);\n\n          if ($target.closest(self.$el).length === 0 && $target.closest(self.$tip).length === 0) {\n            if (self.isOpen) {\n              $.proxy(self.hide, self)();\n            }\n          }\n        });\n      }\n    }\n  }\n\n  hideMethod(obj) {\n    let self = obj instanceof this.constructor ? obj : $(obj.currentTarget).data(NAMESPACE$1);\n    const opts = this.options;\n    let show = false;\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions());\n      $(obj.currentTarget).data(NAMESPACE$1, self);\n    }\n\n    if (!opts.ajax && !self.options.content) {\n      return;\n    }\n\n    if (!self.isOpen) {\n      clearTimeout(self.showTimer);\n      return;\n    }\n\n    if (opts.position.target === 'mouse') {\n      if (this.moveFlag) {\n        return;\n      }\n    }\n\n    if (opts.hide.event === 'click') {\n      if (opts.hide.container) {\n        this._unbind(opts.hide.container, opts.hide.event);\n      }\n    }\n\n    if (opts.hide.inactive) {\n      this._bind(self.$tip, `mouseenter.${NAMESPACE$1}`, () => {\n        show = true;\n      });\n      this._bind(self.$tip, `mouseleave.${NAMESPACE$1}`, () => {\n        show = false;\n        clearTimeout(self.hideTimer);\n        self.hideTimer = setTimeout(() => {\n          $.proxy(self.hide, self)();\n        }, self.options.hide.delay);\n\n        self._unbind(self.$tip, `mouseenter.${NAMESPACE$1} mouseleave.${NAMESPACE$1}`);\n      });\n    }\n\n    clearTimeout(self.hideTimer);\n\n    self.hideTimer = setTimeout(() => {\n      if (!show) {\n        $.proxy(self.hide, self)();\n      }\n    }, opts.hide.delay);\n  }\n\n  move(e) {\n    const x = Math.round(e.pageX);\n    const y = Math.round(e.pageY);\n    const t = this.$element.offset().top;\n    const l = this.$element.offset().left;\n    const w = this.$element.outerWidth();\n    const h = this.$element.outerHeight();\n\n    if (x >= l && x <= l + w && y >= t && y <= t + h) {\n      if (this.options.position.adjust.mouse) {\n        this.setPosition(e);\n      } else if (this.isFirst) {\n        this.setPosition(e);\n        this.isFirst = false;\n      }\n    } else {\n      $(document).off(`mousemove.${NAMESPACE$1}`);\n      this.moveFlag = false;\n      this.hideMethod(this.$element.data(NAMESPACE$1));\n    }\n  }\n\n  getContent() {\n    return this.$element.attr(this.options.contentAttr) ||\n      (typeof this.options.content === 'function' ? this.options.content() : this.options.content);\n  }\n\n  setPosition(e) {\n    let offset;\n    let _offset;\n    let positionAttr;\n    const opts = this.options;\n    let target = this.$el;\n    const $container = opts.position.container;\n    let flag = false;\n    let isMove = false;\n\n    positionAttr = $container.css('position');\n\n    const position = opts.position.value.split(' ');\n\n    if (opts.position.target === 'mouse' && e) {\n      target = {\n        top: Math.round(e.pageY),\n        left: Math.round(e.pageX)\n      };\n      isMove = true;\n    } else {\n      if (typeof opts.position.target === 'object') {\n        target = opts.position.target;\n      }\n    }\n\n    if (opts.position.auto) {\n      if (opts.position.target !== 'mouse') {\n        const collisions = getViewportCollisions(target, this.$tip, $container);\n        let posArr = ['top', 'right', 'bottom', 'left'];\n        $.each(collisions, (i, v) => {\n          posArr = $.map(posArr, n => n !== v ? n : null);\n        });\n        if (posArr.length > 0) {\n          position[0] = posArr[0];\n        }\n      }\n    }\n\n    this.$tip.addClass(`${this.namespace}-element-${position[0]}`)\n      .addClass(`${this.namespace}-arrow-${position[1]}`);\n\n    offset = computePlacementOffset(target, this.$tip, position, isMove);\n\n    if (positionAttr !== 'static') {\n      _offset = $container.offset();\n      flag = true;\n    }\n\n    this.$tip.css({\n      top: offset.top + (flag ? -_offset.top : 0),\n      left: offset.left + (flag ? -_offset.left : 0)\n    });\n  }\n\n  loadToggle() {\n    const flag = this.loadFlag;\n    if (flag) {\n      this.$tip.removeClass(`${this.namespace}_isLoading`);\n      this.loadFlag = false;\n    } else {\n      this.$tip.addClass(`${this.namespace}_isLoading`);\n      this.loadFlag = true;\n    }\n  }\n\n  statusToggle(isOpen) {\n    if (isOpen) {\n      this.$element.removeClass(this.classes.active);\n    } else {\n      this.$element.addClass(this.classes.active);\n    }\n  }\n\n  /*\n   *  Public Method\n   */\n  rePosition(e) {\n    this.setPosition(e);\n    return this;\n  }\n\n  setContent() {\n    const opts = this.options;\n\n    if (opts.ajax) {\n      this.loadToggle();\n    }\n\n    this.$content.html(opts.content);\n    this.$tip.appendTo(opts.position.container);\n\n    if (opts.position.target !== 'mouse') {\n      this.setPosition();\n    }\n  }\n\n  show() {\n    const opts = this.options;\n\n    if (!this.enabled) {\n      return;\n    }\n\n    // if (opts.closeBtn) this.$tip.addClass(this.classes.hasClose);\n\n    if (opts.skin) {\n      this.$tip.addClass(`${this.namespace}_${opts.skin}`);\n    }\n\n    if (opts.ajax) {\n      opts.ajax(this);\n    }\n\n    this.setContent(this.isOpen);\n    this.statusToggle(this.isOpen);\n\n    this.isOpen = true;\n    this.trigger('show');\n    return this;\n  }\n\n  hide() {\n    if (this.options.ajax) {\n      this.$tip.removeClass(`${this.namespace}_isLoading`);\n      this.loadFlag = false;\n    }\n    this.$tip.off(`.${NAMESPACE$1}`);\n    this.statusToggle(this.isOpen);\n    this.$tip.remove();\n    this.isOpen = false;\n    this.trigger('hide');\n    return this;\n  }\n\n  enable() {\n    this.enabled = true;\n    this.$element.addClass(this.classes.enabled);\n    this.trigger('enable');\n    return this;\n  }\n\n  disable() {\n    this.enabled = false;\n    this.$element.removeClass(this.classes.enabled);\n    this.trigger('disable');\n    return this;\n  }\n\n  destroy() {\n    this.$element.off(`.${NAMESPACE$1}`);\n    this.trigger('destroy');\n    return this;\n  }\n\n  static closeAll() {\n    instances.map(instance => {\n      if (instance.isOpen) {\n        instance.hide();\n      }\n    });\n  }\n\n  static setDefaults(options) {\n    if($.isPlainObject(options)) {\n      $.extend(true, DEFAULTS, options);\n    }\n  }\n}\n\nvar info = {\n  version:'0.4.3'\n};\n\nconst NAMESPACE = 'asTooltip';\nconst OtherAsTooltip = $.fn.asTooltip;\n\nconst jQueryAsTooltip = function(options, ...args) {\n  if (typeof options === 'string') {\n    const method = options;\n\n    if (/^_/.test(method)) {\n      return false;\n    } else if ((/^(get)/.test(method))) {\n      const instance = this.first().data(NAMESPACE);\n      if (instance && typeof instance[method] === 'function') {\n        return instance[method](...args);\n      }\n    } else {\n      return this.each(function() {\n        const instance = $.data(this, NAMESPACE);\n        if (instance && typeof instance[method] === 'function') {\n          instance[method](...args);\n        }\n      });\n    }\n  }\n\n  return this.each(function() {\n    if (!$(this).data(NAMESPACE)) {\n      $(this).data(NAMESPACE, new asTooltip(this, options));\n    }\n  });\n};\n\n$.fn.asTooltip = jQueryAsTooltip;\n\n$.asTooltip = $.extend({\n  setDefaults: asTooltip.setDefaults,\n  closeAll: asTooltip.closeAll,\n  noConflict: function() {\n    $.fn.asTooltip = OtherAsTooltip;\n    return jQueryAsTooltip;\n  }\n}, info);\n"]}