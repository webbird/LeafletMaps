{"version":3,"sources":["jquery-asIconPicker.es.js"],"names":["global","factory","define","amd","exports","require","mod","jQuery","jqueryAsIconPickerEs","this","_jquery","_classCallCheck","instance","Constructor","TypeError","_jquery2","obj","__esModule","default","_interopRequireDefault","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","DEFAULTS","namespace","source","tooltip","hasSearch","extraClass","iconPrefix","emptyText","searchText","cancelSelected","keyboard","flat","heightToScroll","iconPicker","iconSearch","formatNoMatches","errorHanding","process","value","match","replace","parse","onInit","onReady","onAfterFill","init","self","attach","gather","destroy","$wrapper","off","bound","keys","LEFT","UP","RIGHT","DOWN","ENTER","ESC","horizontalChange","step","$mask","options","index","parseInt","iconsAll","current","set","_open","verticalChange","ulHeight","$iconContainer","find","width","liHeight","lineNumber","Math","floor","text","siblingNumber","parent","siblings","nextNumber","parents","next","prevNumber","prev","remain","enter","_hide","esc","previous","tab","left","$","proxy","up","right","down","press","e","keyCode","which","_keyboard","call","map","preventDefault","that","$iconPicker","one","searching","val","_this","hasOwnProperty","parts","_stringSeparate","uppercase","toUpperCase","undefined","on","str","separator","re","RegExp","split","asIconPicker","element","$element","extend","data","classes","disabled","wrapper","search","active","hide","hover","mask","addClass","wrap","attr","$iconSearch","before","iconsSearched","isSearch","initialized","_trigger","is","_getSourceFromSelect","_processSource","showLoading","keyup","currentTarget","focus","select","reset","hasClass","removeClass","children","highlight","click","event","stopPropagation","each","el","$el","group","label","items","$children","j","push","eq","processItem","item","processSource","isArray","k","html","fillIcon","_this2","isMatchedItem","replaceDiacritics","toLowerCase","groupSearched","grep","n","first","tempIcons","itemHTML","title","$group","appendTo","option","last","asTooltip","closeAll","skin","onlyOne","inArray","asScrollbar","s","d","charAt","icon","ulWidth","containerHeight","height","liTop","offset","top","liWidth","ulTop","outerHeight","$selector"],"mappings":"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","file":"jquery-asIconPicker.min.js","sourcesContent":["/**\n* jQuery asIconPicker v0.2.4\n* https://github.com/amazingSurge/jquery-asIconPicker\n*\n* Copyright (c) amazingSurge\n* Released under the LGPL-3.0 license\n*/\nimport $$1 from 'jquery';\n\n/* eslint no-empty-function:\"off\" */\nvar DEFAULTS = {\n  namespace: 'asIconPicker',\n  source: false, // Icons source\n  tooltip: true,\n  hasSearch: true,\n  extraClass: 'fa',\n  iconPrefix: 'fa-',\n  emptyText: 'None Selected',\n  searchText: 'Search',\n  cancelSelected: true,\n  keyboard: true,\n  flat: false,\n  heightToScroll: '290',\n\n  iconPicker: function() {\n    return '<div class=\"namespace-selector\">' +\n      '<span class=\"namespace-selected-icon\">' +\n      'None selected' +\n      '</span>' +\n      '<span class=\"namespace-selector-arrow\">' +\n      '<i></i>' +\n      '</span>' +\n      '</div>' +\n      '<div class=\"namespace-selector-popup\">' +\n      '<div class=\"namespace-icons-container\"></div>' +\n      '</div>';\n  },\n  iconSearch: function() {\n    return '<div class=\"namespace-selector-search\">' +\n      '<input type=\"text\" name=\"\" value=\"\" placeholder=\"searchText\" class=\"namespace-search-input\"/>' +\n      '<i class=\"namespace-search-icon\"></i>' +\n      '</div>';\n  },\n  formatNoMatches: function() {\n    return 'No matches found';\n  },\n  errorHanding: function() {},\n  process: function(value) {\n    if (value && value.match(this.iconPrefix)) {\n      return value.replace(this.iconPrefix, '');\n    }\n    return value;\n  },\n  parse: function(value) {\n    if (value.match(this.iconPrefix)) {\n      return value;\n    }\n    return this.iconPrefix + value;\n  },\n  // callback\n  onInit: null,\n  onReady: null,\n  onAfterFill: null\n};\n\nlet keyboard = {\n  init(self) {\n    this.attach(self, this.gather(self));\n  },\n  destroy(self) {\n    self.$wrapper.off('keydown');\n    self.bound = false;\n  },\n  keys() {\n    return {\n      LEFT: 37,\n      UP: 38,\n      RIGHT: 39,\n      DOWN: 40,\n      ENTER: 13,\n      ESC: 27\n    };\n  },\n  horizontalChange(step) {\n    if (!this.$mask && !this.options.flat) {\n      this._open();\n      return;\n    }\n    this.index += parseInt(step, 10);\n    if (this.index >= this.iconsAll.length) {\n      this.index = this.iconsAll.length - 1;\n    } else if (this.index < 0) {\n      this.index = 0;\n    }\n    this.current = this.iconsAll[this.index];\n    this.set(this.current);\n  },\n  verticalChange(step) {\n    if (!this.$mask && !this.options.flat) {\n      this._open();\n      return;\n    }\n    const ulHeight = this.$iconContainer.find(`.${this.namespace}-list`).width();\n    const liHeight = this.$iconContainer.find(`.${this.namespace}-list li`).width(),\n      lineNumber = Math.floor(ulHeight / liHeight);\n\n    step = parseInt(step, 10);\n\n    if (this.index >= 0 && this.$iconContainer.find(`.${this.namespace}-group`).text()) {\n      const siblingNumber = this.$iconContainer.find(`.${this.current}`).parent().siblings().length + 1;\n      const nextNumber = this.$iconContainer.find(`.${this.current}`).parents(`.${this.namespace}-group`).next().find('li').length;\n      const prevNumber = this.$iconContainer.find(`.${this.current}`).parents(`.${this.namespace}-group`).prev().find('li').length;\n      const index = this.$iconContainer.find(`.${this.current}`).parent().index();\n      let remain;\n      if (step === 1) {\n        remain = siblingNumber % lineNumber;\n\n        if (index + lineNumber >= siblingNumber && nextNumber) {\n          if (index + remain >= siblingNumber && remain > 0) {\n            if (index + remain >= siblingNumber + nextNumber) {\n              this.index += nextNumber;\n            } else {\n              this.index += remain;\n            }\n          } else {\n            if (index + remain + lineNumber >= siblingNumber + nextNumber) {\n              this.index += remain + nextNumber;\n            } else {\n              this.index += remain + lineNumber;\n            }\n          }\n        } else {\n          this.index += lineNumber;\n        }\n      } else if (step === -1) {\n        remain = prevNumber % lineNumber;\n\n        if (index > remain - 1 && index < lineNumber) {\n          if (prevNumber >= lineNumber) {\n            this.index -= lineNumber + remain;\n          } else {\n            this.index -= index + 1;\n          }\n        } else if (index <= remain - 1) {\n          this.index -= remain;\n        } else {\n          this.index -= lineNumber;\n        }\n      }\n    } else {\n      this.index += lineNumber * step;\n    }\n\n    if (this.index >= this.iconsAll.length) {\n      this.index = this.iconsAll.length - 1;\n    } else if (this.index < 0) {\n      this.index = 0;\n    }\n    this.current = this.iconsAll[this.index];\n    this.set(this.current);\n  },\n  enter() {\n    if (this.$mask) {\n      if (this.current) {\n        this.set(this.current);\n        this._hide();\n      }\n    } else {\n      this._open();\n    }\n  },\n  esc() {\n    this.set(this.previous);\n    this._hide();\n  },\n  tab() {\n    this._hide();\n  },\n  gather(self) {\n    return {\n      left: $.proxy(this.horizontalChange, self, '-1'),\n      up: $.proxy(this.verticalChange, self, '-1'),\n      right: $.proxy(this.horizontalChange, self, '1'),\n      down: $.proxy(this.verticalChange, self, '1'),\n      enter: $.proxy(this.enter, self),\n      esc: $.proxy(this.esc, self)\n    };\n  },\n  press(e) {\n    const key = e.keyCode || e.which;\n\n    if (key === 9) {\n      this._keyboard.tab.call(this);\n    }\n\n    if (key in this.map && typeof this.map[key] === 'function') {\n      e.preventDefault();\n      return this.map[key].call(this);\n    }\n    const that = this;\n    this.$iconPicker.find(`.${this.namespace}-search-input`).one('keyup', function() {\n      that.searching($(this).val());\n    });\n  },\n  attach(self, map) {\n    let key;\n    for (key in map) {\n      if (map.hasOwnProperty(key)) {\n        const parts = this._stringSeparate(key, '_'),\n          uppercase = [];\n        const len = parts.length;\n\n        if (len === 1) {\n          uppercase[0] = parts[0].toUpperCase();\n          self.map[this.keys()[uppercase[0]]] = map[key];\n        } else {\n          for (let i = 0; i < parts.length; i++) {\n            uppercase[i] = parts[i].toUpperCase();\n            if (i === 0) {\n              if (self.map[this.keys()[uppercase[0]]] === undefined) {\n                self.map[this.keys()[uppercase[0]]] = {};\n              }\n            } else {\n              self.map[this.keys()[uppercase[0]]][this.keys()[uppercase[i]]] = map[key];\n            }\n          }\n        }\n      }\n    }\n    if (!self.bound) {\n      self.bound = true;\n      self.$wrapper.on('keydown', e => {\n        this.press.call(self, e);\n      });\n    }\n  },\n  _stringSeparate(str, separator) {\n    const re = new RegExp(`[.\\\\${separator}\\\\s].*?`);\n    separator = str.match(re);\n    const parts = str.split(separator);\n    return parts;\n  }\n};\n\nconst NAMESPACE$1 = 'asIconPicker';\n\nclass asIconPicker {\n  constructor(element, options) {\n    this.element = element;\n    this.$element = $$1(element);\n\n    this.options = $$1.extend({}, DEFAULTS, options, this.$element.data());\n\n    this.namespace = this.options.namespace;\n\n    this.classes = {\n      disabled: `${this.namespace}_disabled`,\n      wrapper: `${this.namespace}-wrapper`,\n      search: `${this.namespace}_with_search`,\n      active: `${this.namespace}_active`,\n      flat: `${this.namespace}_isFlat`,\n      hide: `${this.namespace}_hide`,\n      hover: `${this.namespace}_hover`,\n      mask: `${this.namespace}-mask`\n    };\n\n    this.$element.addClass(this.namespace);\n    this.$element.wrap(`<div class=\"${this.classes.wrapper}\"></div>`);\n    this.$wrapper = this.$element.parent();\n\n    //make $wrapper can be focused\n    this.$wrapper.attr('tabindex', '0');\n\n    const iconPicker = this.options.iconPicker().replace(/namespace/g, this.namespace),\n      iconSearch = this.options.iconSearch().replace(/namespace/g, this.namespace).replace(/searchText/g, this.options.searchText);\n    this.$iconPicker = $$1(iconPicker);\n    this.$iconContainer = this.$iconPicker.find(`.${this.namespace}-icons-container`);\n    this.$iconSearch = $$1(iconSearch);\n\n    if (this.options.hasSearch) {\n      this.$iconContainer.before(this.$iconSearch);\n      this.$iconContainer.parent().addClass(this.classes.search);\n      this.iconsSearched = [];\n    }\n    this.map = {};\n    this.bound = false;\n    this.isSearch = false;\n    this.current = this.$element.val();\n    this.source = [];\n\n    // flag\n    this.disabled = false;\n    this.initialized = false;\n\n    this._trigger('init');\n    this.init();\n  }\n\n  init() {\n    const that = this;\n    // Hide source element\n    this.$element.hide();\n\n    // Add the icon picker after the select\n    this.$element.before(this.$iconPicker);\n\n    if (!this.options.source && this.$element.is('select')) {\n      this.source = this._getSourceFromSelect();\n    } else {\n      this.source = this._processSource(this.options.source);\n    }\n\n    // Load icons\n    this.showLoading();\n\n    this.$wrapper.find(`.${this.namespace}-selector-popup`).addClass(this.classes.hide);\n    /**\n     * On down arrow click\n     */\n    if (!that.options.flat) {\n      this.$wrapper.find(`.${this.namespace}-selector`).on('click', () => {\n        // Open/Close the icon picker\n        that._open();\n      });\n    } else {\n      that._open();\n    }\n\n    if (!this.options.keyboard) {\n      this.$iconPicker.find(`.${this.namespace}-search-input`).keyup($$1.proxy(e => {\n        that.searching($$1(e.currentTarget).val());\n      }, this));\n    } else {\n      this.$wrapper.on('focus', () => {\n        keyboard.init(that);\n      });\n    }\n\n    this.$iconPicker.on('click', `.${this.namespace}-isSearching .${this.namespace}-search-icon`, $$1.proxy(function() {\n      this.$iconPicker.find(`.${this.namespace}-search-input`).focus().select();\n      this.reset();\n    }, this));\n\n    this.$iconContainer.on('click', `.${this.namespace}-list li`, $$1.proxy(function(e) {\n      if (this.options.cancelSelected && $$1(e.currentTarget).hasClass(`${this.namespace}-current`)) {\n        $$1(e.currentTarget).removeClass(`${this.namespace}-current`);\n        this.set();\n        return;\n      }\n      this.set($$1(e.currentTarget).children().data('value'));\n      this._hide();\n    }, this)).on('mouseenter', `.${this.namespace}-list li`, $$1.proxy(function(e) {\n      this.highlight($$1(e.currentTarget).children().data('value'));\n    }, this)).on('mouseleave', `.${this.namespace}-list li`, $$1.proxy(function() {\n      this.highlight();\n    }, this));\n\n    /**\n     * Stop click propagation on iconpicker\n     */\n    this.$iconPicker.click(event => {\n      event.stopPropagation();\n      that.$iconPicker.find(`.${that.namespace}-search-input`).focus().select();\n      return false;\n    });\n\n    this.initialized = true;\n    // after init end trigger 'ready'\n    this._trigger('ready');\n  }\n\n  _getSourceFromSelect() {\n    const source = [];\n    this.$element.children().each((i, el) => {\n      const $el = $$1(el);\n      if ($el.is('optgroup')) {\n        const group = $$1.extend({}, $el.data(), {\n          label: el.label,\n          items: []\n        });\n        const $children = $el.children();\n        const length = $children.length;\n        for (let j = 0; j < length; j++) {\n          group.items.push({\n            value: $children.eq(j).val(),\n            text: $children.eq(j).text()\n          });\n        }\n        source.push(group);\n      } else if ($el.is('option')) {\n        source.push({\n          value: $el.val(),\n          text: $el.text()\n        });\n      }\n    });\n\n    return source;\n  }\n\n  _processSource(source) {\n    const processItem = (key, item) => {\n      if (typeof key === 'string') {\n        return {\n          value: key,\n          text: item\n        };\n      }\n      if (typeof item === 'string') {\n        return {\n          value: item,\n          text: item\n        };\n      }\n      return item;\n    };\n    const processSource = [];\n\n    if (!$$1.isArray(source)) {\n      for (const key in source) {\n        if ({}.hasOwnProperty.call(source, key)) {\n          processSource.push(processItem(key, source[key]));\n        }\n      }\n    } else {\n      for (let i = 0; i < source.length; i++) {\n        if (source[i].items) {\n          if ($$1.isArray(source[i].items)) {\n            for (let j = 0; j < source[i].items.length; j++) {\n              source[i].items[j] = processItem(j, source[i].items[j]);\n            }\n            processSource[i] = source[i];\n          } else {\n            processSource[i] = {\n              label: source[i].label,\n              items: []\n            };\n            for (const k in source[i].items) {\n              if ({}.hasOwnProperty.call(source[i].item, k)) {\n                processSource[i].items.push(processItem(k, source[i].items[k]));\n              }\n            }\n          }\n        } else {\n          processSource[i] = processItem(i, source[i]);\n        }\n      }\n    }\n\n    return processSource;\n  }\n\n  showLoading() {\n    this.$iconContainer.html(`<span class=\"${this.namespace}-loading\"><i></i></span>`);\n\n    // If source is set\n    if (this.source.length > 0) {\n\n      // Render icons\n      this.fillIcon();\n    }\n  }\n\n  searching(value) {\n    // If the string is not empty\n    if (value === '') {\n      this.reset();\n      return;\n    }\n\n    // Set icon search to X to reset search\n    this.$iconSearch.addClass(`${this.namespace}-isSearching`);\n\n    // Set this as a search\n    this.isSearch = true;\n    this.iconsSearched = [];\n\n    const isMatchedItem = item => (this.replaceDiacritics(item.text).toLowerCase()).search(value.toLowerCase()) >= 0;\n    let groupSearched = {};\n    // Actual search\n    for (let i = 0, item;\n      (item = this.source[i]); i++) {\n      if (typeof item.items !== 'undefined') {\n        groupSearched = {\n          label: item.label,\n          items: $$1.grep(item.items, n => isMatchedItem(n))\n        };\n\n        if (groupSearched.items.length > 0) {\n          this.iconsSearched.push(groupSearched);\n        }\n      } else {\n        if (isMatchedItem(item)) {\n          this.iconsSearched.push(item);\n        }\n      }\n    }\n\n    if (this.iconsSearched.length > 0) {\n      const first = this.iconsSearched[0];\n\n      if (typeof first.items !== 'undefined') {\n        this.current = first.items[0].value;\n      } else {\n        this.current = first.value;\n      }\n    } else {\n      this.current = '';\n    }\n\n    // Render icon list\n    this.fillIcon();\n  }\n\n  /**\n   * Fill icons inside the popup\n   */\n  fillIcon() {\n    const that = this;\n    if (typeof this.$iconContainer.data('asIconPicker') !== 'undefined') {\n      this.$iconContainer.asIconPicker('destroy');\n    }\n    let tempIcons = [];\n    this.iconsAll = [];\n\n    // Set a temporary array for icons\n    if (this.isSearch) {\n      tempIcons = this.iconsSearched;\n    } else {\n      tempIcons = this.source;\n    }\n\n    // If not show an error when no icons are found\n    if (tempIcons.length < 1) {\n      this.$iconContainer.html(`<div class=\"${this.namespace}-noMatch\">${this.options.formatNoMatches()}</div>`);\n      return;\n\n      // else empty the container\n    }\n    this.$iconContainer.html('');\n\n    // List icons\n    const itemHTML = item => {\n      that.iconsAll.push(item.value);\n      return $$1('<li/>', {\n        html: `<i class=\"${that.options.extraClass} ${item.value}\" data-value=\"${item.value}\"></i>`,\n        title: (that.options.tooltip) ? item.text : ''\n      });\n    };\n    let $group;\n    for (let i = 0, item; i < tempIcons.length; i++) {\n      item = tempIcons[i];\n\n      if (typeof item.label !== 'undefined') {\n        if (item.items.length) {\n          $group = $$1(`<div class=\"${this.namespace}-group\"><div class=\"${this.namespace}-group-label\">${item.label}:</div><ul class=\"${this.namespace}-list\"></ul></div>`).appendTo(this.$iconContainer);\n        }\n        for (let j = 0, option;\n          (option = item.items[j]); j++) {\n          itemHTML(option).appendTo($group.find('ul'));\n        }\n      } else {\n        const listClass = this.$iconContainer.children().last().attr('class');\n        if (listClass !== `${this.namespace}-list`) {\n          $$1(`<ul class=\"${this.namespace}-list\"></ul>`).appendTo(this.$iconContainer);\n        }\n        itemHTML(item).appendTo(this.$iconContainer.children().last());\n      }\n    }\n    if (this.options.tooltip) {\n      $$1.asTooltip.closeAll();\n      this.$iconContainer.find(`.${this.namespace}-list li`).asTooltip({\n        namespace: 'asTooltip',\n        skin: 'skin-dream',\n        onlyOne: true\n      });\n    }\n\n    this.index = $$1.inArray(this.current, this.iconsAll);\n\n    if (this.index >= 0) {\n      this.set(this.current, false);\n    } else {\n      this.set(null, false);\n    }\n\n    // Add the scrollbar in the iconContainer\n    this.$iconContainer.asScrollbar({\n      namespace: `${that.namespace}-icons`\n    });\n\n    this._trigger('afterFill');\n  }\n\n  replaceDiacritics(s) {\n    let k;\n    const d = '40-46 50-53 54-57 62-70 71-74 61 47 77'.replace(/\\d+/g, '\\\\3$&').split(' ');\n    for (k in d) {\n      if ({}.hasOwnProperty.call(d, k)) {\n        s = s.toLowerCase().replace(new RegExp(`[${d[k]}]`, 'g'), 'aeiouncy'.charAt(k));\n      }\n    }\n    return s;\n  }\n\n  highlight(icon) {\n    if (icon) {\n      this.$iconPicker.find(`.${icon}`).parent().addClass(this.classes.hover);\n    } else {\n      this.$iconPicker.find(`.${this.classes.hover}`).removeClass(this.classes.hover);\n    }\n  }\n\n  scrollToSelectedIcon() {\n    if (this.current) {\n      const ulWidth = this.$iconContainer.find(`.${this.namespace}-list`).width();\n      const containerHeight = this.$iconContainer.height(),\n        liHeight = this.$iconContainer.find(`.${this.namespace}-list li`).height(),\n        liTop = this.$iconContainer.find(`.${this.current}`).parent().offset().top,\n        liWidth = this.$iconContainer.find(`.${this.namespace}-list li`).width(),\n        lineNumber = Math.floor(ulWidth / liWidth),\n        ulTop = this.$iconContainer.find(`.${this.namespace}-list`).offset().top;\n\n      if (this.index < lineNumber) {\n        this.value = 0;\n      } else {\n        this.value = (liTop + liHeight - ulTop) / containerHeight;\n      }\n    }\n    this.$iconContainer.asIconPicker('move', this.value, true);\n  }\n\n  reset() {\n    // Empty input\n    this.$iconPicker.find(`.${this.namespace}-search-input`).val('');\n\n    // Reset search icon class\n    this.$iconSearch.removeClass(`${this.namespace}-isSearching`);\n    this.isSearch = false;\n\n    // Fill icons\n    this.fillIcon();\n\n    // Add the scrollbar in the iconContainer\n    if (this.$iconContainer.outerHeight() >= this.options.heightToScroll) {\n      this.$iconContainer.asScrollbar();\n    }\n  }\n\n  _open() {\n    const $selector = this.$wrapper.find(`.${this.namespace}-selector`),\n      that = this;\n\n    if (that.options.flat) {\n      $selector.addClass(this.classes.flat);\n      $selector.siblings(`.${this.namespace}-selector-popup`).addClass(this.classes.flat).removeClass(this.classes.hide);\n    } else {\n      $selector.addClass(this.classes.active);\n      $selector.siblings(`.${this.namespace}-selector-popup`).addClass(this.classes.active).removeClass(this.classes.hide);\n      this.previous = this.current;\n      if ($selector.hasClass(this.classes.active) && !that.options.flat) {\n        this.$iconPicker.find(`.${this.namespace}-search-input`).focus().select();\n        this.$mask = $$1('<div></div>').addClass(this.classes.mask).appendTo(this.$element.parent());\n        this.$mask.on('click', () => {\n          that._hide();\n        });\n      }\n    }\n  }\n\n  _hide() {\n    if (this.options.flat) {\n      return;\n    }\n    if (this.options.keyboard) {\n      keyboard.destroy(this);\n    }\n\n    this._clearMask();\n    this.$wrapper.find(`.${this.namespace}-selector`).removeClass(this.classes.active);\n    this.$wrapper.find(`.${this.namespace}-selector-popup`).addClass(this.classes.hide).removeClass(this.classes.active);\n    this.$wrapper.focus();\n  }\n\n  _clearMask() {\n    if (this.$mask) {\n      this.$mask.off('.asIconPicker');\n      this.$mask.remove();\n      this.$mask = null;\n    }\n  }\n\n  _trigger(eventType, ...params) {\n    let data = [this].concat(params);\n\n    // event\n    this.$element.trigger(`${NAMESPACE$1}::${eventType}`, data);\n\n    // callback\n    eventType = eventType.replace(/\\b\\w+\\b/g, (word) => {\n      return word.substring(0, 1).toUpperCase() + word.substring(1);\n    });\n    let onFunction = `on${eventType}`;\n\n    if (typeof this.options[onFunction] === 'function') {\n      this.options[onFunction].apply(this, params);\n    }\n  }\n\n  _update() {\n    this.$element.val(this.val());\n    this._trigger('change', this.current);\n  }\n\n  load(source) {\n    if (typeof source !== 'undefined') {\n      this.source = this._processSource(source);\n    }\n\n    if (this.options.flat) {\n      this.showLoading();\n    } else {\n      this.$wrapper.find(`.${this.namespace}-selector-popup`).removeClass(this.classes.hide);\n      this.showLoading();\n      this.$wrapper.find(`.${this.namespace}-selector-popup`).addClass(this.classes.hide);\n    }\n  }\n\n  get() {\n    return this.current;\n  }\n\n  set(icon, update) {\n    this.$iconContainer.find(`.${this.namespace}-current`).removeClass(`${this.namespace}-current`);\n    if (icon) {\n      this.$iconContainer.find(`[data-value=\"${icon}\"]`).parent().addClass(`${this.namespace}-current`);\n      this.$iconPicker.find(`.${this.namespace}-selected-icon`).removeClass(`${this.namespace}-none-selected`).html(`<i class=\"${this.options.extraClass} ${icon}\"></i>${this.options.process(icon)}`);\n    } else {\n      this.$iconPicker.find(`.${this.namespace}-selected-icon`).addClass(`${this.namespace}-none-selected`).html(`<i class=\"${this.options.extraClass} ${this.options.iconPrefix}ban\"></i>${this.options.emptyText}`);\n    }\n\n\n    this.current = icon;\n    this.index = $$1.inArray(this.current, this.iconsAll);\n    this.scrollToSelectedIcon();\n\n    if (update !== false) {\n      this._update();\n    }\n  }\n\n  clear() {\n    this.set(null);\n  }\n\n  val(value) {\n    if (typeof value === 'undefined') {\n      return this.options.process(this.current);\n    }\n\n    const valueObj = this.options.parse(value);\n\n    if (valueObj) {\n      this.set(valueObj);\n    } else {\n      this.clear();\n    }\n  }\n\n  enable() {\n    this.disabled = false;\n\n    // which element is up to your requirement\n    this.$wrapper.removeClass(this.classes.disabled);\n    this._trigger('enable');\n    // here maybe have some events detached\n  }\n\n  disable() {\n    this.disabled = true;\n    // which element is up to your requirement\n    // .disabled { pointer-events: none; } NO SUPPORT IE11 BELOW\n    this.$wrapper.addClass(this.classes.disabled);\n    this._trigger('disable');\n  }\n\n  destroy() {\n    // detached events first\n    // then remove all js generated html\n    this.$element.data(NAMESPACE$1, null);\n    this._trigger('destroy');\n  }\n\n  static setDefaults(options) {\n    $$1.extend(DEFAULTS, $$1.isPlainObject(options) && options);\n  }\n}\n\nvar info = {\n  version:'0.2.4'\n};\n\nconst NAMESPACE = 'asIconPicker';\nconst OtherAsIconPicker = $$1.fn.asIconPicker;\n\nconst jQueryAsIconPicker = function(options, ...args) {\n  if (typeof options === 'string') {\n    const method = options;\n\n    if (/^_/.test(method)) {\n      return false;\n    } else if ((/^(get)$/.test(method)) || (method === 'val' && args.length === 0)) {\n      const instance = this.first().data(NAMESPACE);\n      if (instance && typeof instance[method] === 'function') {\n        return instance[method](...args);\n      }\n    } else {\n      return this.each(function() {\n        const instance = $$1.data(this, NAMESPACE);\n        if (instance && typeof instance[method] === 'function') {\n          instance[method](...args);\n        }\n      });\n    }\n  }\n\n  return this.each(function() {\n    if (!$$1(this).data(NAMESPACE)) {\n      $$1(this).data(NAMESPACE, new asIconPicker(this, options));\n    }\n  });\n};\n\n$$1.fn.asIconPicker = jQueryAsIconPicker;\n\n$$1.asIconPicker = $$1.extend({\n  setDefaults: asIconPicker.setDefaults,\n  noConflict: function() {\n    $$1.fn.asIconPicker = OtherAsIconPicker;\n    return jQueryAsIconPicker;\n  }\n}, info);\n"]}